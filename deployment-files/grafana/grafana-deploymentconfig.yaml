apiVersion: v1
kind: DeploymentConfig
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    io.kompose.service: grafana
  strategy:
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/node-monitor-net: "true"
        io.kompose.service: grafana
    spec:
      initContainers:
        - name: git-cloner
          image: alpine/git
          args:
            - clone
            - --branch
            - monitoring-stack
            - --
            - https://github.com/DICoE-CGI/indy-node-monitor.git
            - /monitoring-stack
          volumeMounts:
            - mountPath: /monitoring-stack
              name: monitoring-stack-repo
      containers:
        - env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: GF_SECURITY_ADMIN_PASSWORD
                  name: grafana-config-monitoring
            - name: GF_USERS_ALLOW_SIGN_UP
              valueFrom:
                configMapKeyRef:
                  key: GF_USERS_ALLOW_SIGN_UP
                  name: grafana-config-monitoring
            - name: INFLUX_DB_FLUX_TOKEN
              valueFrom:
                configMapKeyRef:
                  key: INFLUX_DB_FLUX_TOKEN
                  name: grafana-config-monitoring
          image: " "
          command: ["/bin/bash", "-c", "--"]
          args:
            - echo "Initializing the copy process";
              echo "PWD:" $(pwd);
              echo "User:" $(whoami);
              cp -r /monitoring-stack-repo/grafana/provisioning/. /etc/grafana/provisioning/;
              /run.sh;
          name: grafana
          ports:
            - containerPort: 3000
          resources: {}
          # securityContext:
          #   runAsUser: 472
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-data
            # - mountPath: /etc/grafana/provisioning/
            #   name: grafana-claim1
            - mountPath: /monitoring-stack-repo
              name: monitoring-stack-repo
      restartPolicy: Always
      volumes:
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data
        - name: monitoring-stack-repo
  test: false
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - grafana
        from:
          kind: ImageStreamTag
          name: grafana:latest
      type: ImageChange
# status:
#   availableReplicas: 0
#   latestVersion: 0
#   observedGeneration: 0
#   replicas: 0
#   unavailableReplicas: 0
#   updatedReplicas: 0
