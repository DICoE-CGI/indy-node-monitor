apiVersion: 1

# List of rule groups to import or update
groups:
  # <int> organization ID, default = 1
  - orgId: 1
    # <string, required> name of the rule group
    name: Indy-Alerts-Provisioned
    # <string, required> name of the folder the rule group will be stored in
    folder: Indy-Alerts-Provisioned
    # <duration, required> interval that the rule group should evaluated at
    interval: 60s
    # <list, required> list of rules that are part of the rule group
    rules:
      # <string, required> unique identifier for the rule
      - uid: my_id_1
        # <string, required> title of the rule that will be displayed in the UI
        title: Node Down
        # <string, required> which query should be used for the condition
        condition: A
        # <list, required> list of query objects that should be executed on each
        #                  evaluation - should be obtained trough the API
        data:
          - refId: A
              relativeTimeRange:
                from: 600
                to: 0
              datasourceUid: PBFA97CFB590B2093
              model:
                editorMode: code
                expr: node_response_result_data_Pool_info_Reachable_nodes_count{job="tick", network="CANDy network"}
                hide: false
                intervalMs: 1000
                legendFormat: __auto
                maxDataPoints: 43200
                range: true
                refId: A
            - refId: B
              relativeTimeRange:
                from: 0
                to: 0
              datasourceUid: "-100"
              model:
                conditions:
                  - evaluator:
                      params:
                        - 4
                      type: lt
                    operator:
                      type: and
                    query:
                      params:
                        - A
                    reducer:
                      params: []
                      type: last
                    type: query
                datasource:
                  type: __expr__
                  uid: "-100"
                expression: A
                hide: false
                intervalMs: 1000
                maxDataPoints: 43200
                refId: B
                type: classic_conditions
        #   # <string> UID of a dashboard that the alert rule should be linked to
        # dashboardUid: my_dashboard
        # # <int> ID of the panel that the alert rule should be linked to
        # panelId: 123
        # <string> the state the alert rule will have when no data is returned
        #          possible values: "NoData", "Alerting", "OK", default = NoData
        noDataState: NoData
        # <string> the state the alert rule will have when the query execution
        #          failed - possible values: "Error", "Alerting", "OK"
        #          default = Alerting
        # <duration, required> for how long should the alert fire before alerting
        for: 60s
        # <map<string, string>> a map of strings to pass around any data
        annotations:
          summary: One of the nodes is down
        # <map<string, string> a map of strings that can be used to filter and
        #                      route alerts